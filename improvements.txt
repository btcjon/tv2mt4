1. **Refactor Message Parsing:** DONE
   - Use regex to extract information from messages. DONE
   - Create a MessageParser class that returns a structured Message object. DONE

2. **Implement Command Handlers:** DONE
   - Create a base CommandHandler class. DONE
   - Implement specific handlers for each action (e.g., UpdateSnRHandler, UpdateTrendHandler, SendPineConnectorCommandHandler). DONE

3. **Configuration Management:** DONE
   - Move patterns and keywords to a JSON or YAML configuration file. DONE

4. **Logging and Monitoring:** DONE
   - Make sure each part has logging DONE

Step-by-Step Plan for Steps 1 and 2 DONE

*Important, use app10.py and airtable_operations.py as reference to the original code we are refactoring for our app.py, message_parser.py, message.py DONE

**Once each item is "done" append "DONE" at the end of its line DONE

A. Define a Message class: DONE
   1. Create a new class called Message with an __init__ method. DONE
   2. Add attributes to the Message class for symbol, command, and parameters with default values of None. DONE

B. Define a MessageParser class: DONE
   1. Create a new class called MessageParser. DONE
   2. Define an __init__ method that initializes a dictionary to hold regex patterns for different message types. DONE
   3. Add a parse method that takes a raw message as input and iterates over the regex patterns to find a match. DONE
   4. For each message type, define a separate parsing method (e.g., parse_trend, parse_snr) that uses the corresponding regex pattern to extract information and returns a populated Message object. DONE
        **List each message type below (list is complete, all are DONE) DONE
        4a. trend DONE
        4b. SnR DONE
        4c. td9 DONE
        4d. pineconnector DONE

C. Update the webhook handler in app.py: DONE
   1. Instantiate the MessageParser class in the webhook handler function. DONE
   2. Use the parse method of the MessageParser instance to convert the raw incoming message into a structured Message object. DONE
   3. Replace the existing parsing logic in the webhook handler with the new structured Message object to handle different actions. DONE

D. Test the new message parsing logic: IN PROGRESS
   1. I will make live on server and we will send various messages to test from postman and see if they work IN PROGRESS
